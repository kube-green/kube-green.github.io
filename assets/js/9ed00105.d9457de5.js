"use strict";(self.webpackChunkkube_green_github_io=self.webpackChunkkube_green_github_io||[]).push([[3873],{8730:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>r,contentTitle:()=>l,default:()=>h,frontMatter:()=>i,metadata:()=>o,toc:()=>d});const o=JSON.parse('{"id":"configuration","title":"Configuration","description":"In the namespace where you want to enable kube-green, apply the SleepInfo resource.","source":"@site/docs/configuration.md","sourceDirName":".","slug":"/configuration","permalink":"/docs/configuration","draft":false,"unlisted":false,"editUrl":"https://github.com/kube-green/kube-green.github.io/edit/main/docs/configuration.md","tags":[],"version":"current","sidebarPosition":4,"frontMatter":{"sidebar_position":4},"sidebar":"tutorialSidebar","previous":{"title":"Uninstall","permalink":"/docs/installation/uninstall"},"next":{"title":"Metrics","permalink":"/docs/metrics"}}');var t=s(4848),a=s(8453);const i={sidebar_position:4},l="Configuration",r={},d=[{value:"Patches",id:"patches",level:2},{value:"Examples",id:"examples",level:2},{value:"Simple SleepInfo resource",id:"simple-sleepinfo-resource",level:3},{value:"Exclude resources",id:"exclude-resources",level:3},{value:"Sleep without wake up",id:"sleep-without-wake-up",level:3},{value:"Suspend only CronJobs",id:"suspend-only-cronjobs",level:3},{value:"Exclude with labels",id:"exclude-with-labels",level:3},{value:"Include with labels",id:"include-with-labels",level:3},{value:"Custom patches",id:"custom-patches",level:3}];function c(e){const n={a:"a",br:"br",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,a.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"configuration",children:"Configuration"})}),"\n",(0,t.jsxs)(n.p,{children:["In the namespace where you want to enable ",(0,t.jsx)(n.em,{children:"kube-green"}),", apply the ",(0,t.jsx)(n.code,{children:"SleepInfo"})," resource.\nAn example of ",(0,t.jsx)(n.code,{children:"SleepInfo"})," is accessible ",(0,t.jsx)(n.a,{href:"https://github.com/kube-green/kube-green/blob/main/testdata/working-hours.yml",children:"at this link"}),"."]}),"\n",(0,t.jsx)(n.p,{children:"By default, the managed resources are:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"Deployments"}),": enabled by default, it can be disabled with the ",(0,t.jsx)(n.code,{children:"suspendDeployments"})," field;"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"StatefulSets"}),": enabled by default, it can be disabled with the ",(0,t.jsx)(n.code,{children:"suspendStatefulSets"})," field;"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"CronJobs"}),": disabled by default, it can be enabled with the ",(0,t.jsx)(n.code,{children:"suspendCronJobs"})," field."]}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:["You can manage other resources by adding ",(0,t.jsx)(n.a,{href:"#patches",children:"custom patches"}),"."]}),"\n",(0,t.jsxs)(n.p,{children:["Check the ",(0,t.jsx)(n.a,{href:"/docs/apireference_v1alpha1",children:"API reference"})," for the SleepInfo CRD to understand each field."]}),"\n",(0,t.jsx)(n.h2,{id:"patches",children:"Patches"}),"\n",(0,t.jsx)(n.p,{children:'Patches are used to define how to change the resources so that the runtime will "sleep". The patches are applied to the resources at the sleep time and are reverted at the wake up time.'}),"\n",(0,t.jsxs)(n.p,{children:["In this way, it is possible to support all the Kubernetes resources, including those defined through custom resource definitions.",(0,t.jsx)(n.br,{}),"\n","To let ",(0,t.jsx)(n.em,{children:"kube-green"})," support a custom resource, you need to define the specific ",(0,t.jsx)(n.code,{children:"patch"})," for the resource inside the ",(0,t.jsx)(n.code,{children:"SleepInfo"})," (the API reference is available ",(0,t.jsx)(n.a,{href:"/docs/apireference_v1alpha1",children:"here"}),") and add the permission to the ClusterRole associated with the ",(0,t.jsx)(n.em,{children:"kube-green"})," manager (",(0,t.jsx)(n.a,{href:"/docs/installation/rbac",children:"here is how to configure the RBAC"}),"), if not already set."]}),"\n",(0,t.jsx)(n.h2,{id:"examples",children:"Examples"}),"\n",(0,t.jsx)(n.h3,{id:"simple-sleepinfo-resource",children:"Simple SleepInfo resource"}),"\n",(0,t.jsx)(n.p,{children:"The following configuration sets a sleep time to 20:00 and wake up time to 08:00 from Monday to Friday (in Rome timezone) for the default managed resources."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",children:'apiVersion: kube-green.com/v1alpha1\nkind: SleepInfo\nmetadata:\n  name: working-hours\nspec:\n  weekdays: "1-5"\n  sleepAt: "20:00"\n  wakeUpAt: "08:00"\n  timeZone: "Europe/Rome"\n'})}),"\n",(0,t.jsx)(n.h3,{id:"exclude-resources",children:"Exclude resources"}),"\n",(0,t.jsxs)(n.p,{children:["The following configuration sets a sleep time to 20:00 and wake up time to 08:00 from Monday to Friday (in Rome timezone), for the default managed resources and the ",(0,t.jsx)(n.code,{children:"CronJobs"}),", excluding the ",(0,t.jsx)(n.code,{children:"Deployment"})," named ",(0,t.jsx)(n.code,{children:"api-gateway"}),"."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",children:'apiVersion: kube-green.com/v1alpha1\nkind: SleepInfo\nmetadata:\n  name: exclude-resources\nspec:\n  weekdays: "1-5"\n  sleepAt: "20:00"\n  wakeUpAt: "08:00"\n  timeZone: "Europe/Rome"\n  suspendCronJobs: true\n  excludeRef:\n    - apiVersion: "apps/v1"\n      kind:       Deployment\n      name:       api-gateway\n'})}),"\n",(0,t.jsx)(n.h3,{id:"sleep-without-wake-up",children:"Sleep without wake up"}),"\n",(0,t.jsxs)(n.p,{children:["The following configuration sets a sleep time to 20:00 from Monday to Friday (in Rome timezone) for the default managed resources and the ",(0,t.jsx)(n.code,{children:"CronJobs"}),". The wake up time is not set, so the resources will be suspended until they are manually changed (for example, through a redeployment)."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",children:'apiVersion: kube-green.com/v1alpha1\nkind: SleepInfo\nmetadata:\n  name: no-wakep-up\nspec:\n  weekdays: "1-5"\n  sleepAt: "20:00"\n  timeZone: "Europe/Rome"\n  suspendCronJobs: true\n'})}),"\n",(0,t.jsx)(n.h3,{id:"suspend-only-cronjobs",children:"Suspend only CronJobs"}),"\n",(0,t.jsxs)(n.p,{children:["The following configuration sets a sleep time to 20:00 and wake up time to 08:00 on each day of the week (in Rome timezone), only for ",(0,t.jsx)(n.code,{children:"CronJobs"}),", excluding the specific ",(0,t.jsx)(n.code,{children:"CronJob"})," named ",(0,t.jsx)(n.code,{children:"do-not-suspend"}),"."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",children:'apiVersion: kube-green.com/v1alpha1\nkind: SleepInfo\nmetadata:\n  name: suspend-cronjobs\nspec:\n  weekdays: "*"\n  sleepAt: "20:00"\n  wakeUpAt: "08:00"\n  timeZone: "Europe/Rome"\n  suspendCronJobs: true\n  suspendDeployments: false\n  suspendStatefulSets: false\n  excludeRef:\n    - apiVersion: "batch/v1"\n      kind:       CronJob\n      name:       do-not-suspend\n'})}),"\n",(0,t.jsx)(n.h3,{id:"exclude-with-labels",children:"Exclude with labels"}),"\n",(0,t.jsxs)(n.p,{children:["The following configuration sets a sleep time to 20:00 and wake up time to 08:00 on each day of the week (in Rome timezone), for the default managed resources, excluding the resources with the label ",(0,t.jsx)(n.code,{children:"kube-green.dev/exclude: true"}),"."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",children:'apiVersion: kube-green.com/v1alpha1\nkind: SleepInfo\nmetadata:\n  name: exclude-with-labels\nspec:\n  weekdays: "*"\n  sleepAt: "20:00"\n  wakeUpAt: "08:00"\n  timeZone: "Europe/Rome"\n  excludeRef:\n    - matchLabels: \n        kube-green.dev/exclude: true\n'})}),"\n",(0,t.jsx)(n.h3,{id:"include-with-labels",children:"Include with labels"}),"\n",(0,t.jsxs)(n.p,{children:["The following configuration sets a sleep time to 20:00 and wake up time to 08:00 on each day of the week (in Rome timezone), for the default and ",(0,t.jsx)(n.code,{children:"CronJobs"})," resources with the label ",(0,t.jsx)(n.code,{children:"kube-green.dev/include: true"}),"."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",children:'apiVersion: kube-green.com/v1alpha1\nkind: SleepInfo\nmetadata:\n  name: include-with-labels\nspec:\n  weekdays: "1-5"\n  sleepAt: "20:00"\n  wakeUpAt: "08:00"\n  timeZone: "Europe/Rome"\n  suspendCronJobs: true\n  includeRef:\n    - matchLabels: \n        kube-green.dev/include: true\n'})}),"\n",(0,t.jsx)(n.h3,{id:"custom-patches",children:"Custom patches"}),"\n",(0,t.jsxs)(n.p,{children:["The following configuration sets a sleep time to 20:00 and wake up time to 08:00 from Monday to Friday (in Rome timezone) for the default managed resources, the ",(0,t.jsx)(n.code,{children:"CronJobs"})," and adds support to the not managed resource ",(0,t.jsx)(n.code,{children:"ReplicaSets"}),"."]}),"\n",(0,t.jsxs)(n.p,{children:["This is only an example of how to add custom patches to the resources. The patch in this example sets the ",(0,t.jsx)(n.code,{children:"replicas"})," field to ",(0,t.jsx)(n.code,{children:"0"}),". In this way, it is possible to support some custom resources."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",children:'apiVersion: kube-green.com/v1alpha1\nkind: SleepInfo\nmetadata:\n  name: add-replicasets-support-with-custom-patches\nspec:\n  weekdays: "1-5"\n  sleepAt: "20:00"\n  wakeUpAt: "08:00"\n  timeZone: "Europe/Rome"\n  suspendCronJobs: true\n  patches:\n    - target:\n        group: apps\n        kind: ReplicaSet\n      patch: |-\n        - path: /spec/replicas\n          op: add\n          value: 0\n'})})]})}function h(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(c,{...e})}):c(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>i,x:()=>l});var o=s(6540);const t={},a=o.createContext(t);function i(e){const n=o.useContext(a);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:i(e.components),o.createElement(a.Provider,{value:n},e.children)}}}]);