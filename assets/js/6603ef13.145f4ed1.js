"use strict";(self.webpackChunkkube_green_github_io=self.webpackChunkkube_green_github_io||[]).push([[3897],{229:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>o,contentTitle:()=>r,default:()=>h,frontMatter:()=>a,metadata:()=>i,toc:()=>c});const i=JSON.parse('{"id":"installation/index","title":"Installation","description":"kube-green provides various ways to install the tool.","source":"@site/docs/installation/index.md","sourceDirName":"installation","slug":"/installation/","permalink":"/docs/installation/","draft":false,"unlisted":false,"editUrl":"https://github.com/kube-green/kube-green.github.io/edit/main/docs/installation/index.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"How it works","permalink":"/docs/lifecycle"},"next":{"title":"Install","permalink":"/docs/installation/install"}}');var s=n(4848),l=n(8453);const a={},r="Installation",o={},c=[{value:"Prerequisite",id:"prerequisite",level:2},{value:"Default static install",id:"default-static-install",level:2},{value:"Getting started",id:"getting-started",level:2}];function d(e){const t={a:"a",code:"code",em:"em",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,l.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.header,{children:(0,s.jsx)(t.h1,{id:"installation",children:"Installation"})}),"\n",(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.em,{children:"kube-green"})," provides various ways to install the tool."]}),"\n",(0,s.jsx)(t.h2,{id:"prerequisite",children:"Prerequisite"}),"\n",(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.em,{children:"kube-green"})," support all Kubernetes cluster versions >= 1.23 <= 1.30 and OpenShift Container Platform v4."]}),"\n",(0,s.jsx)(t.p,{children:"Supported architectures are: amd64, arm64."}),"\n",(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.em,{children:"kube-green"})," needs certificates to exposes webhooks. The recommended way to handle certificates is using the ",(0,s.jsx)(t.a,{href:"https://cert-manager.io/docs/installation/",children:"cert-manager"}),". Otherwise, you can manage certificates manually as described ",(0,s.jsx)(t.a,{href:"/docs/advanced/webhook-cert-management",children:"here"}),"."]}),"\n",(0,s.jsx)(t.h2,{id:"default-static-install",children:"Default static install"}),"\n",(0,s.jsx)(t.p,{children:"With this method, you can not change the default configuration parameters."}),"\n",(0,s.jsx)(t.p,{children:"The default static configuration for the latest release can be installed with:"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-sh",children:"kubectl apply -f https://github.com/kube-green/kube-green/releases/latest/download/kube-green.yaml\n"})}),"\n",(0,s.jsx)(t.h2,{id:"getting-started",children:"Getting started"}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.a,{href:"/docs/installation/install#kubectl-apply",children:"kubectl apply"}),": install using kubectl apply and static manifest;"]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.a,{href:"/docs/installation/install#helm-chart",children:"helm"}),": install ",(0,s.jsx)(t.em,{children:"kube-green"})," using the helm chart; this allows to customize the installation if necessary;"]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.a,{href:"/docs/installation/install#operator-lifecycle-manager-olm",children:"Operator Lifecycle Manager (OLM)"}),": it's possible to install ",(0,s.jsx)(t.em,{children:"kube-green"})," with OperatorHub or, if you use OpenShift, with the OpenShift web console;"]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.a,{href:"/docs/installation/install#kustomize",children:"kustomize"}),": in the ",(0,s.jsx)(t.em,{children:"kube-green"})," GitHub repository are available the kustomize configuration. In this way, it's possible to release the development version and configure it editing the files."]}),"\n"]})]})}function h(e={}){const{wrapper:t}={...(0,l.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>a,x:()=>r});var i=n(6540);const s={},l=i.createContext(s);function a(e){const t=i.useContext(l);return i.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function r(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:a(e.components),i.createElement(l.Provider,{value:t},e.children)}}}]);