"use strict";(self.webpackChunkkube_green_github_io=self.webpackChunkkube_green_github_io||[]).push([[6103],{2679:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>u,frontMatter:()=>i,metadata:()=>s,toc:()=>c});const s=JSON.parse('{"id":"installation/rbac","title":"RBAC","description":"Starting from kube-green version 0.6, it is possible to patch all types of resources writing custom patches.","source":"@site/docs/installation/rbac.md","sourceDirName":"installation","slug":"/installation/rbac","permalink":"/docs/installation/rbac","draft":false,"unlisted":false,"editUrl":"https://github.com/kube-green/kube-green.github.io/edit/main/docs/installation/rbac.md","tags":[],"version":"current","sidebarPosition":6,"frontMatter":{"sidebar_position":6},"sidebar":"tutorialSidebar","previous":{"title":"Cloud compatibility","permalink":"/docs/installation/cloud-provider"},"next":{"title":"Uninstall","permalink":"/docs/installation/uninstall"}}');var r=n(4848),a=n(8453);const i={sidebar_position:6},o="RBAC",l={},c=[{value:"Roles and RoleBindings",id:"roles-and-rolebindings",level:2},{value:"Example",id:"example",level:3},{value:"ClusterRole with Helm Chart",id:"clusterrole-with-helm-chart",level:2}];function d(e){const t={a:"a",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",pre:"pre",...(0,a.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.header,{children:(0,r.jsx)(t.h1,{id:"rbac",children:"RBAC"})}),"\n",(0,r.jsxs)(t.p,{children:["Starting from ",(0,r.jsx)(t.em,{children:"kube-green"})," version 0.6, it is possible to patch all types of resources writing custom patches.\nTo see more about this feature, check the ",(0,r.jsx)(t.a,{href:"/docs/configuration",children:"configuration"})," page."]}),"\n",(0,r.jsx)(t.h2,{id:"roles-and-rolebindings",children:"Roles and RoleBindings"}),"\n",(0,r.jsxs)(t.p,{children:["By default, ",(0,r.jsx)(t.em,{children:"kube-green"})," is installed with a set of ClusterRole and a ClusterRoleBinding that allow the operator to manage the default supported resources in the cluster (",(0,r.jsx)(t.em,{children:"Deployment"}),", ",(0,r.jsx)(t.em,{children:"CronJob"})," and ",(0,r.jsx)(t.em,{children:"StatefulSet"}),")."]}),"\n",(0,r.jsxs)(t.p,{children:["To add the permission to manage other resources, it is possible to aggregate custom rules to the default ClusterRole, using the ",(0,r.jsx)(t.a,{href:"https://kubernetes.io/docs/reference/access-authn-authz/rbac/#aggregated-clusterroles",children:"Kubernetes Aggregated ClusterRoles feature"})," setting the ",(0,r.jsx)(t.code,{children:'kube-green.dev/aggregate-to-manager: "true"'})," label (which is used to aggregate the ClusterRole)."]}),"\n",(0,r.jsx)(t.h3,{id:"example",children:"Example"}),"\n",(0,r.jsxs)(t.p,{children:["The following example shows how to create a ClusterRole that allows the operator to manage ReplicaSets resources. For each resource, you need to add at least the following verbs: ",(0,r.jsx)(t.code,{children:"get"}),", ",(0,r.jsx)(t.code,{children:"list"}),", ",(0,r.jsx)(t.code,{children:"patch"}),", ",(0,r.jsx)(t.code,{children:"update"}),", ",(0,r.jsx)(t.code,{children:"watch"}),"."]}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-yaml",children:'apiVersion: rbac.authorization.k8s.io/v1\nkind: ClusterRole\nmetadata:\n  labels:\n    kube-green.dev/aggregate-to-manager: "true"\n  name: kube-green-replicasets-aggregate-to-manager\nrules:\n- apiGroups:\n  - apps\n  resources:\n  - replicasets\n  verbs:\n  - get\n  - list\n  - patch\n  - update\n  - watch\n'})}),"\n",(0,r.jsx)(t.h2,{id:"clusterrole-with-helm-chart",children:"ClusterRole with Helm Chart"}),"\n",(0,r.jsxs)(t.p,{children:["It is possible to manage the custom ClusterRole with the ",(0,r.jsx)(t.em,{children:"kube-green"})," Helm Chart. To do this, you need to enable the ",(0,r.jsx)(t.code,{children:"rbac.customClusterRole"})," configuration in the ",(0,r.jsx)(t.code,{children:"values.yaml"})," file."]}),"\n",(0,r.jsx)(t.p,{children:"An example configuration:"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-yaml",children:"  customClusterRole:\n    enabled: true\n    name: kube-green-additional-resources\n    rules:\n      - apiGroups:\n        - apps\n        resources:\n        - replicasets\n        verbs:\n        - get\n        - list\n        - patch\n        - update\n        - watch\n"})}),"\n",(0,r.jsx)(t.p,{children:"This configuration will generate a ClusterRole with the specified name and rules."})]})}function u(e={}){const{wrapper:t}={...(0,a.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>i,x:()=>o});var s=n(6540);const r={},a=s.createContext(r);function i(e){const t=s.useContext(a);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:i(e.components),s.createElement(a.Provider,{value:t},e.children)}}}]);