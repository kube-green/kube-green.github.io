"use strict";(self.webpackChunkkube_green_github_io=self.webpackChunkkube_green_github_io||[]).push([[4122],{5781:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>l,contentTitle:()=>a,default:()=>h,frontMatter:()=>i,metadata:()=>t,toc:()=>d});const t=JSON.parse('{"id":"lifecycle","title":"How it works","description":"The use of kube-green is very simple. Once installed on the cluster, configure the desired CRD to make it works.","source":"@site/docs/lifecycle.md","sourceDirName":".","slug":"/lifecycle","permalink":"/docs/lifecycle","draft":false,"unlisted":false,"editUrl":"https://github.com/kube-green/kube-green.github.io/edit/main/docs/lifecycle.md","tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"sidebar_position":2},"sidebar":"tutorialSidebar","previous":{"title":"Getting Started","permalink":"/docs/getting-started"},"next":{"title":"Installation","permalink":"/docs/installation/"}}');var r=n(4848),o=n(8453);const i={sidebar_position:2},a="How it works",l={},d=[{value:"What resources handles?",id:"what-resources-handles",level:2},{value:"What means sleep and wake up a resource?",id:"what-means-sleep-and-wake-up-a-resource",level:3},{value:"Deployment and StatefulSet",id:"deployment-and-statefulset",level:4},{value:"CronJobs",id:"cronjobs",level:4},{value:"How state is saved across sleep and wake up?",id:"how-state-is-saved-across-sleep-and-wake-up",level:3}];function c(e){const s={br:"br",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,o.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(s.header,{children:(0,r.jsx)(s.h1,{id:"how-it-works",children:"How it works"})}),"\n",(0,r.jsxs)(s.p,{children:["The use of ",(0,r.jsx)(s.code,{children:"kube-green"})," is very simple. Once installed on the cluster, configure the desired CRD to make it works.",(0,r.jsx)(s.br,{}),"\n","The CRD used by ",(0,r.jsx)(s.code,{children:"kube-green"})," is called ",(0,r.jsx)(s.strong,{children:"SleepInfo"}),". In this configuration, it is possible to configure the sleep and wake up time for the namespace."]}),"\n",(0,r.jsx)(s.p,{children:"An example of configuration is:"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-yaml",children:'apiVersion: kube-green.com/v1alpha1\nkind: SleepInfo\nmetadata:\n  name: working-hours\nspec:\n  weekdays: "1-5"\n  sleepAt: "20:00"\n  wakeUpAt: "08:00"\n  timeZone: "Europe/Rome"\n  suspendCronJobs: true\n  excludeRef:\n    - apiVersion: "apps/v1"\n      kind:       Deployment\n      name:       my-deployment\n'})}),"\n",(0,r.jsxs)(s.p,{children:["With this ",(0,r.jsx)(s.strong,{children:"SleepInfo"}),", called ",(0,r.jsx)(s.em,{children:"working-hours"}),", namespace will be slept at 20:00 and woken up at 08:00 (Italy time zone) on weekdays (Monday to Friday)."]}),"\n",(0,r.jsx)(s.h2,{id:"what-resources-handles",children:"What resources handles?"}),"\n",(0,r.jsxs)(s.p,{children:[(0,r.jsx)(s.em,{children:"kube-green"})," handles:"]}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsx)(s.li,{children:"Deployment"}),"\n",(0,r.jsx)(s.li,{children:"CronJobs"}),"\n",(0,r.jsx)(s.li,{children:"StatefulSet"}),"\n"]}),"\n",(0,r.jsxs)(s.p,{children:["By default, on sleep, deployment and statefulset resources are stopped (if not excluded).",(0,r.jsx)(s.br,{}),"\n","If you want to suspend also cronjobs, set ",(0,r.jsx)(s.strong,{children:"suspendCronJobs"})," to ",(0,r.jsx)(s.strong,{children:"true"}),"."]}),"\n",(0,r.jsx)(s.h3,{id:"what-means-sleep-and-wake-up-a-resource",children:"What means sleep and wake up a resource?"}),"\n",(0,r.jsx)(s.p,{children:"The sleep of the resource is the stop of the resource, and it depends on the type of resources."}),"\n",(0,r.jsx)(s.p,{children:"The wake up of the resource is the restore of the status of the resource before the sleep."}),"\n",(0,r.jsx)(s.h4,{id:"deployment-and-statefulset",children:"Deployment and StatefulSet"}),"\n",(0,r.jsxs)(s.p,{children:["To sleep the ",(0,r.jsx)(s.em,{children:"Deployment"})," and ",(0,r.jsx)(s.em,{children:"StatefulSet"})," resources, replicas are set to 0."]}),"\n",(0,r.jsx)(s.p,{children:"To wake up, the number of replicas is set to the number of replicas before the sleep."}),"\n",(0,r.jsx)(s.h4,{id:"cronjobs",children:"CronJobs"}),"\n",(0,r.jsxs)(s.p,{children:["To sleep the ",(0,r.jsx)(s.em,{children:"CronJob"})," resources, are set as suspended."]}),"\n",(0,r.jsx)(s.p,{children:"To wake up, the suspend field is restored."}),"\n",(0,r.jsx)(s.h3,{id:"how-state-is-saved-across-sleep-and-wake-up",children:"How state is saved across sleep and wake up?"}),"\n",(0,r.jsxs)(s.p,{children:["The state of the resources before the sleep is saved in a secret with the name of the ",(0,r.jsx)(s.em,{children:"SleepInfo"})," resource in the namespace."]})]})}function h(e={}){const{wrapper:s}={...(0,o.R)(),...e.components};return s?(0,r.jsx)(s,{...e,children:(0,r.jsx)(c,{...e})}):c(e)}},8453:(e,s,n)=>{n.d(s,{R:()=>i,x:()=>a});var t=n(6540);const r={},o=t.createContext(r);function i(e){const s=t.useContext(o);return t.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function a(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:i(e.components),t.createElement(o.Provider,{value:s},e.children)}}}]);