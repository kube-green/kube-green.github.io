"use strict";(self.webpackChunkkube_green_github_io=self.webpackChunkkube_green_github_io||[]).push([[7272],{1154:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>o,contentTitle:()=>c,default:()=>d,frontMatter:()=>i,metadata:()=>r,toc:()=>h});const r=JSON.parse('{"id":"advanced/webhook-cert-management","title":"Certificate Management","description":"kube-green webhooks require a valid certificate to expose the webhook server to the Kubernetes API server.","source":"@site/docs/advanced/webhook-cert-management.md","sourceDirName":"advanced","slug":"/advanced/webhook-cert-management","permalink":"/docs/advanced/webhook-cert-management","draft":false,"unlisted":false,"editUrl":"https://github.com/kube-green/kube-green.github.io/edit/main/docs/advanced/webhook-cert-management.md","tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"sidebar_position":1},"sidebar":"tutorialSidebar","previous":{"title":"Usage with kind","permalink":"/docs/tutorials/kind"},"next":{"title":"API Reference","permalink":"/docs/apireference_v1alpha1"}}');var a=t(4848),s=t(8453);const i={sidebar_position:1},c="Certificate Management",o={},h=[{value:"With cert-manager",id:"with-cert-manager",level:2},{value:"Without cert-manager",id:"without-cert-manager",level:2},{value:"Manual management of certificates",id:"manual-management-of-certificates",level:3},{value:"Automated Management of Webhook Certificates",id:"automated-management-of-webhook-certificates",level:3}];function l(e){const n={a:"a",br:"br",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,s.R)(),...e.components},{Details:t}=n;return t||function(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Details",!0),(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.header,{children:(0,a.jsx)(n.h1,{id:"certificate-management",children:"Certificate Management"})}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.code,{children:"kube-green"})," webhooks require a valid certificate to expose the webhook server to the Kubernetes API server."]}),"\n",(0,a.jsx)(n.h2,{id:"with-cert-manager",children:"With cert-manager"}),"\n",(0,a.jsxs)(n.p,{children:["By default, ",(0,a.jsx)(n.code,{children:"kube-green"})," webhooks are designed to work with ",(0,a.jsx)(n.code,{children:"cert-manager"}),".",(0,a.jsx)(n.br,{}),"\n","This is the recommended way to manage certificates for the webhook."]}),"\n",(0,a.jsx)(n.h2,{id:"without-cert-manager",children:"Without cert-manager"}),"\n",(0,a.jsxs)(n.p,{children:["If you want to avoid deploying ",(0,a.jsx)(n.code,{children:"cert-manager"}),", you can use the following alternatives."]}),"\n",(0,a.jsx)(n.h3,{id:"manual-management-of-certificates",children:"Manual management of certificates"}),"\n",(0,a.jsxs)(n.p,{children:["To manually manage the certificates, you need to create a K8s secret of type ",(0,a.jsx)(n.code,{children:"kubernetes.io/tls"})," with ",(0,a.jsx)(n.code,{children:"tls.crt"})," and ",(0,a.jsx)(n.code,{children:"tls.key"})," keys.\nThe certificate in this secret must be signed by a CA and valid for the DNS names:"]}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"SERVICE_NAME"}),"\n",(0,a.jsx)(n.li,{children:"SERVICE_NAME.NAMESPACE"}),"\n",(0,a.jsx)(n.li,{children:"SERVICE_NAME.NAMESPACE.svc"}),"\n",(0,a.jsx)(n.li,{children:"SERVICE_NAME.NAMESPACE.svc.cluster.local"}),"\n"]}),"\n",(0,a.jsxs)(n.p,{children:["where ",(0,a.jsx)(n.code,{children:"SERVICE_NAME"})," is the name of the service that exposes the webhook (",(0,a.jsx)(n.code,{children:"kube-green-webhook-service"})," by default) and ",(0,a.jsx)(n.code,{children:"NAMESPACE"})," is the namespace where the service is deployed."]}),"\n",(0,a.jsxs)(n.p,{children:["Once the secret is created, it must be mounted in the ",(0,a.jsx)(n.code,{children:"kube-green"})," deployment as a volume. If the secret is called ",(0,a.jsx)(n.code,{children:"webhook-server-cert"}),", the volumes configuration should be the following:"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:"volumes:\n- name: webhook-server-cert\n  secret:\n    secretName: <SECRET_NAME>\n    optional: true\n"})}),"\n",(0,a.jsx)(n.p,{children:"and the volume mount in the container:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:"volumeMounts:\n- name: webhook-server-cert\n  mountPath: /tmp/k8s-webhook-server/serving-certs\n"})}),"\n",(0,a.jsx)(n.p,{children:"The CA that signs the certificate must be set as caBundle of clientConfig in the webhook configuration."}),"\n",(0,a.jsxs)(n.p,{children:["If you are using the ",(0,a.jsx)(n.code,{children:"kustomize"})," configuration in the ",(0,a.jsx)(n.a,{href:"https://github.com/kube-green/kube-green/tree/main/config",children:"kube-green repository"}),", you can comment out all the parts below the ",(0,a.jsx)(n.code,{children:"[CERT-MANAGER]"})," comment and write a kustomization to insert the caBundle correctly."]}),"\n",(0,a.jsxs)(n.p,{children:["Example of the webhook configuration to patch, with ",(0,a.jsx)(n.code,{children:"<CA_BUNDLE>"})," as the base64 of the ",(0,a.jsx)(n.code,{children:"ca.crt"})," file:"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:"webhooks:\n  - name: vsleepinfo.kb.io\n    clientConfig:\n      caBundle: <CA_BUNDLE>\n"})}),"\n",(0,a.jsx)(n.p,{children:"Each time the certificate expires, you will need to update the secret with a new certificate."}),"\n",(0,a.jsxs)(t,{children:[(0,a.jsx)("summary",{children:(0,a.jsx)("i",{children:"Generate Self-Signed Certificates step by step"})}),(0,a.jsx)(n.p,{children:"To generate self-signed certificates, you can use the following commands (take this as an example):"}),(0,a.jsxs)(n.p,{children:["Write a file with the following content with the openssl configuration (name it ",(0,a.jsx)(n.code,{children:"openssl.conf"}),"):"]}),(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"[ req ]\ndefault_bits = 2048\nprompt = no\ndefault_md = sha256\nreq_extensions = req_ext\ndistinguished_name = dn\n\n[ dn ]\nCN = kube-green-webhook-service.kube-green.svc.cluster.local\n\n[ req_ext ]\nsubjectAltName = @alt_names\n\n[ alt_names ]\nDNS.1 = kube-green-webhook-service\nDNS.2 = kube-green-webhook-service.kube-green\nDNS.3 = kube-green-webhook-service.kube-green.svc\nDNS.4 = kube-green-webhook-service.kube-green.svc.cluster.local\n"})}),(0,a.jsx)(n.p,{children:"And then run the following commands:"}),(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:'# Generate CA private key\nopenssl genpkey -algorithm RSA -out ca.key\n\n# Generate CA certificate for 100 years\nopenssl req -new -nodes -x509 -key ca.key -out ca.crt -days 36500 -subj "/CN=The CA"\n\n# Generate private key\nopenssl genpkey -algorithm RSA -out tls.key\n\n# Generate certificate signing request\nopenssl req -new -key tls.key -out tls.csr -config openssl.conf\n\n# Generate certificate signed with the CA\nopenssl x509 -req -in tls.csr -CA ca.crt -CAkey ca.key -CAcreateserial -out tls.crt -days 365 -extfile openssl.conf -extensions req_ext\n'})}),(0,a.jsx)(n.p,{children:"After creating the certificates, you can create the secret with the following command:"}),(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"kubectl create secret tls webhook-server-cert --cert=./tls.crt --key=./tls.key\n"})}),(0,a.jsxs)(n.p,{children:["Once generated, you can create the ",(0,a.jsx)(n.code,{children:"kube-green"})," manifests (commenting out the ",(0,a.jsx)(n.code,{children:"[CERT-MANAGER]"})," part), create the base64 of the ",(0,a.jsx)(n.code,{children:"ca.crt"})," file and patch the webhook configuration with the new caBundle."]})]}),"\n",(0,a.jsx)(n.h3,{id:"automated-management-of-webhook-certificates",children:"Automated Management of Webhook Certificates"}),"\n",(0,a.jsx)(n.p,{children:"It is possible to manage the certificates using some tools that automate the process described above."}),"\n",(0,a.jsxs)(n.p,{children:["One tool that can be used is ",(0,a.jsx)(n.a,{href:"https://github.com/kubernetes/ingress-nginx/tree/main/images/kube-webhook-certgen",children:"kube-webhook-certgen"}),". You can view a configuration of this tool in the ",(0,a.jsx)(n.a,{href:"https://github.com/kube-green/kube-green/tree/main/charts",children:"kube-green helm chart"}),". In this case, there are some jobs that create the certificate if it does not exist and patch the webhook manifest at runtime."]}),"\n",(0,a.jsxs)(n.p,{children:["You can enable it by setting ",(0,a.jsx)(n.code,{children:"jobsCert.enabled"})," to ",(0,a.jsx)(n.code,{children:"true"})," in the ",(0,a.jsx)(n.code,{children:"values.yaml"})," file of the chart and setting ",(0,a.jsx)(n.code,{children:"certManager.enabled"})," to false."]})]})}function d(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(l,{...e})}):l(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>i,x:()=>c});var r=t(6540);const a={},s=r.createContext(a);function i(e){const n=r.useContext(s);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:i(e.components),r.createElement(s.Provider,{value:n},e.children)}}}]);